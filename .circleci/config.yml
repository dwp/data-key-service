# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
    # specify the version you desire here
    - image: circleci/openjdk:8-jdk

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "build.gradle" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run:
        name: run gradle
        command: |
          sed -i s/version=.*/version=1.0.0/ gradle.properties
          wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/Xenial/cloudhsm-client-jce_latest_amd64.deb
          sudo dpkg --force-all -i cloudhsm-client-jce_latest_amd64.deb
          ./gradlew build

    - save_cache:
        paths:
        - ~/.gradle
        key: v1-dependencies-{{ checksum "build.gradle" }}

    - run:
        name: mkdir for artifact
        command: |
          mkdir artifacts
          cp build/libs/data-key-service-*.jar ./artifacts/

    - persist_to_workspace:
        root: artifacts
        paths:
        - data-key-service-*.jar

  publish-github-release:
    docker:
    - image: cibuilds/github:0.10
    steps:
    - attach_workspace:
        at: ./artifacts
    - run:
        name: "Publish Release on GitHub"
        command: |
            set -u
            set -o pipefail
            ls -l ./artifacts
            VERSION=1.0.0
            ghr \
              -t ${GITHUB_TOKEN} \
              -u ${CIRCLE_PROJECT_USERNAME} \
              -r ${CIRCLE_PROJECT_REPONAME} \
              -c ${CIRCLE_SHA1} -delete \
              ${VERSION} ./artifacts/
workflows:
  version: 2
  build-and-deploy:
    jobs:
    - build
    - publish-github-release:
        requires:
        - build
